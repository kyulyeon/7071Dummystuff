// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _7071Midterm_Study.Data;

#nullable disable

namespace _7071Midterm_Study.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250306015921_one")]
    partial class one
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClientService", b =>
                {
                    b.Property<Guid>("ClientsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServicesID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClientsID", "ServicesID");

                    b.HasIndex("ServicesID");

                    b.ToTable("ClientService");
                });

            modelBuilder.Entity("EmployeeService", b =>
                {
                    b.Property<Guid>("EmployeesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServicesID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeesID", "ServicesID");

                    b.HasIndex("ServicesID");

                    b.ToTable("EmployeeService");
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.FullAddress", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("FullAddresses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            City = "Springfield",
                            PostalCode = "62704",
                            Province = "IL",
                            Street = "123 Main St"
                        },
                        new
                        {
                            ID = 2,
                            City = "Shelbyville",
                            PostalCode = "62705",
                            Province = "IL",
                            Street = "456 Oak Ave"
                        },
                        new
                        {
                            ID = 3,
                            City = "Soccer",
                            PostalCode = "532344",
                            Province = "IL",
                            Street = "123 Rav St"
                        },
                        new
                        {
                            ID = 4,
                            City = "Basketball",
                            PostalCode = "112484",
                            Province = "IL",
                            Street = "123 Abbe St"
                        },
                        new
                        {
                            ID = 5,
                            City = "goodluck",
                            PostalCode = "125404",
                            Province = "IL",
                            Street = "123 Eric St"
                        },
                        new
                        {
                            ID = 6,
                            City = "Bye",
                            PostalCode = "22304",
                            Province = "IL",
                            Street = "123 Claire St"
                        },
                        new
                        {
                            ID = 7,
                            City = "Hi",
                            PostalCode = "85704",
                            Province = "IL",
                            Street = "123 Lex St"
                        },
                        new
                        {
                            ID = 8,
                            City = "Goodbye",
                            PostalCode = "45404",
                            Province = "IL",
                            Street = "123 Ryan St"
                        },
                        new
                        {
                            ID = 9,
                            City = "BCIT",
                            PostalCode = "35204",
                            Province = "IL",
                            Street = "123 Noah St"
                        },
                        new
                        {
                            ID = 10,
                            City = "OS",
                            PostalCode = "75404",
                            Province = "IL",
                            Street = "123 Nolan St"
                        },
                        new
                        {
                            ID = 11,
                            City = "Practice",
                            PostalCode = "20504",
                            Province = "IL",
                            Street = "123 Rahim St"
                        },
                        new
                        {
                            ID = 12,
                            City = "LOL",
                            PostalCode = "02204",
                            Province = "IL",
                            Street = "123 Graves St"
                        },
                        new
                        {
                            ID = 133,
                            City = "Capital City",
                            PostalCode = "62706",
                            Province = "IL",
                            Street = "789 Pine Rd"
                        });
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.FullName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FullName");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jane",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Alice",
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "whatever",
                            LastName = "yor"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "you",
                            LastName = "ABC"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "say",
                            LastName = "DEF"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Iam",
                            LastName = "HIJ"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "better",
                            LastName = "morning"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "than",
                            LastName = "night"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "you",
                            LastName = "dawn"
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "sooo",
                            LastName = "Twilight"
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "man",
                            LastName = "dummy"
                        },
                        new
                        {
                            Id = 13,
                            FirstName = "up",
                            LastName = "data"
                        });
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.Person", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("FullAdressId")
                        .HasColumnType("int");

                    b.Property<int>("FullNameId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FullAdressId");

                    b.HasIndex("FullNameId");

                    b.ToTable("People");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.Service", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            ID = new Guid("e4676c20-de2e-42db-a0a8-478386f8107c"),
                            Name = "Consulting"
                        },
                        new
                        {
                            ID = new Guid("7de064c5-8ad5-473f-a661-ffb2e4af7803"),
                            Name = "Development"
                        },
                        new
                        {
                            ID = new Guid("e8599604-016a-4cc5-9ccc-5612602d0e4e"),
                            Name = "Marketing"
                        },
                        new
                        {
                            ID = new Guid("896f3871-5c39-40f5-ae43-bda82f3686ae"),
                            Name = "Marketing"
                        },
                        new
                        {
                            ID = new Guid("5e8d269a-4a16-4027-8f17-85338c758031"),
                            Name = "Shoplifting"
                        },
                        new
                        {
                            ID = new Guid("e5099435-c9ac-40cd-9d9b-d58056b60680"),
                            Name = "shoort"
                        },
                        new
                        {
                            ID = new Guid("0b3a058c-d4c6-44dd-b722-842f8f8439ab"),
                            Name = "Icecream"
                        },
                        new
                        {
                            ID = new Guid("7bd97ebd-c34e-430b-aa73-136515eb4e70"),
                            Name = "Love"
                        },
                        new
                        {
                            ID = new Guid("bad4fa44-0e43-460b-9932-1e9df4c68e4e"),
                            Name = "Milking"
                        },
                        new
                        {
                            ID = new Guid("7d5418c0-a1cd-4431-8484-9402e7feb502"),
                            Name = "walking dogs"
                        },
                        new
                        {
                            ID = new Guid("93e3a199-88c7-4975-9490-278a57d49261"),
                            Name = "Development"
                        },
                        new
                        {
                            ID = new Guid("d9d14e4c-5e23-47c5-ae66-b6583cd018a1"),
                            Name = "Marketing"
                        },
                        new
                        {
                            ID = new Guid("5e60b2cc-029b-458d-9448-9fa26cbf069d"),
                            Name = "Consulting"
                        },
                        new
                        {
                            ID = new Guid("63c17569-4c5c-4d22-98dc-bfc73a689b89"),
                            Name = "Development"
                        },
                        new
                        {
                            ID = new Guid("fa36a902-71f6-4ea4-b06d-bfa539a0cfa2"),
                            Name = "Marketing"
                        });
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.Client", b =>
                {
                    b.HasBaseType("_7071Midterm_Study.Model.Person");

                    b.Property<int>("Income")
                        .HasColumnType("int");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ID = new Guid("178e51f1-2273-41d8-b19f-9333f2c19317"),
                            DateOfBirth = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullAdressId = 1,
                            FullNameId = 1,
                            Income = 50000
                        },
                        new
                        {
                            ID = new Guid("d1715a0f-e048-4d6b-9f59-03bd0322b91f"),
                            DateOfBirth = new DateTime(1985, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullAdressId = 2,
                            FullNameId = 2,
                            Income = 60000
                        },
                        new
                        {
                            ID = new Guid("e94caf49-16af-4f82-b8fd-c16724c19779"),
                            DateOfBirth = new DateTime(1980, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullAdressId = 3,
                            FullNameId = 3,
                            Income = 75000
                        },
                        new
                        {
                            ID = new Guid("3de752ca-b93a-455a-804e-9b4f5b3889c4"),
                            DateOfBirth = new DateTime(1992, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullAdressId = 4,
                            FullNameId = 4,
                            Income = 54000
                        },
                        new
                        {
                            ID = new Guid("ddcf9913-cc8e-4e18-b9fc-64ab9827e611"),
                            DateOfBirth = new DateTime(1988, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullAdressId = 5,
                            FullNameId = 5,
                            Income = 66000
                        },
                        new
                        {
                            ID = new Guid("48e08988-a033-4aaa-a630-598ee5971b61"),
                            DateOfBirth = new DateTime(1996, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullAdressId = 6,
                            FullNameId = 6,
                            Income = 77400
                        });
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.Contact", b =>
                {
                    b.HasBaseType("_7071Midterm_Study.Model.Person");

                    b.Property<Guid?>("ClientID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("ClientID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.Employee", b =>
                {
                    b.HasBaseType("_7071Midterm_Study.Model.Person");

                    b.Property<Guid?>("ManagerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("ManagerID");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            ID = new Guid("452690f9-4e13-46d4-b6d0-874f98df5b6b"),
                            DateOfBirth = new DateTime(1988, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullAdressId = 2,
                            FullNameId = 2,
                            Salary = 70000,
                            Title = "Developer"
                        },
                        new
                        {
                            ID = new Guid("86d34287-1fdb-4606-8eda-b341539f0eee"),
                            DateOfBirth = new DateTime(1992, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullAdressId = 3,
                            FullNameId = 3,
                            Salary = 80000,
                            Title = "Designer"
                        },
                        new
                        {
                            ID = new Guid("0c7e56fb-5be8-4b25-a567-4e43342368bb"),
                            DateOfBirth = new DateTime(1988, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullAdressId = 4,
                            FullNameId = 4,
                            Salary = 70000,
                            Title = "Developer"
                        },
                        new
                        {
                            ID = new Guid("d689cc86-281c-45fc-9299-7fc49394fe29"),
                            DateOfBirth = new DateTime(1984, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullAdressId = 5,
                            FullNameId = 5,
                            Salary = 70000,
                            Title = "Developer"
                        },
                        new
                        {
                            ID = new Guid("7fb64648-5346-41e9-82a2-7de2e62df15c"),
                            DateOfBirth = new DateTime(1995, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullAdressId = 6,
                            FullNameId = 6,
                            Salary = 80000,
                            Title = "Designer"
                        },
                        new
                        {
                            ID = new Guid("10025b0f-bd2e-4376-adcb-e2d31dd0ca73"),
                            DateOfBirth = new DateTime(1984, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullAdressId = 7,
                            FullNameId = 7,
                            Salary = 70000,
                            Title = "Developer"
                        },
                        new
                        {
                            ID = new Guid("18243a9b-3678-4649-b6ce-3205d4345bef"),
                            DateOfBirth = new DateTime(1991, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullAdressId = 8,
                            FullNameId = 8,
                            Salary = 80000,
                            Title = "Designer"
                        },
                        new
                        {
                            ID = new Guid("0b0924b2-21ec-4c8b-a611-ab6455444f16"),
                            DateOfBirth = new DateTime(1990, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullAdressId = 9,
                            FullNameId = 9,
                            Salary = 80000,
                            Title = "Designer"
                        });
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.Manager", b =>
                {
                    b.HasBaseType("_7071Midterm_Study.Model.Employee");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("ClientService", b =>
                {
                    b.HasOne("_7071Midterm_Study.Model.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_7071Midterm_Study.Model.Service", null)
                        .WithMany()
                        .HasForeignKey("ServicesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeService", b =>
                {
                    b.HasOne("_7071Midterm_Study.Model.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_7071Midterm_Study.Model.Service", null)
                        .WithMany()
                        .HasForeignKey("ServicesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.Person", b =>
                {
                    b.HasOne("_7071Midterm_Study.Model.FullAddress", "Address")
                        .WithMany()
                        .HasForeignKey("FullAdressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_7071Midterm_Study.Model.FullName", "Name")
                        .WithMany()
                        .HasForeignKey("FullNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Name");
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.Client", b =>
                {
                    b.HasOne("_7071Midterm_Study.Model.Person", null)
                        .WithOne()
                        .HasForeignKey("_7071Midterm_Study.Model.Client", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.Contact", b =>
                {
                    b.HasOne("_7071Midterm_Study.Model.Client", null)
                        .WithMany("Contacts")
                        .HasForeignKey("ClientID");

                    b.HasOne("_7071Midterm_Study.Model.Employee", null)
                        .WithMany("Contacts")
                        .HasForeignKey("EmployeeID");

                    b.HasOne("_7071Midterm_Study.Model.Person", null)
                        .WithOne()
                        .HasForeignKey("_7071Midterm_Study.Model.Contact", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.Employee", b =>
                {
                    b.HasOne("_7071Midterm_Study.Model.Person", null)
                        .WithOne()
                        .HasForeignKey("_7071Midterm_Study.Model.Employee", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_7071Midterm_Study.Model.Manager", null)
                        .WithMany("Employees")
                        .HasForeignKey("ManagerID");
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.Manager", b =>
                {
                    b.HasOne("_7071Midterm_Study.Model.Employee", null)
                        .WithOne()
                        .HasForeignKey("_7071Midterm_Study.Model.Manager", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.Client", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.Employee", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("_7071Midterm_Study.Model.Manager", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
